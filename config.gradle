apply from: versions
if (isIndependent()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin: 'com.jakewharton.butterknife'
android {
    compileSdkVersion _compileSdkVersion

    dexOptions {
        javaMaxHeapSize "4g"
    }
    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false
    defaultConfig {
        if (isIndependent()) {
            if (this.name.equals("app")) {
                applicationId "com.base.project"
            } else if (this.name.c("library")) {
                applicationId "me.csxiong.xport"
                println("this == ${this.name} , applicationId")
            } else {
                applicationId "me.csxiong.xport.${this.name}"
                println("this == ${this.name} , applicationId")
            }
        }
        minSdkVersion _minSdkVersion
        targetSdkVersion _targetSdkVersion
        versionCode _versionCode//1 ~ 2147483647 17年10月30号1版本
        versionName _versionName


        renderscriptTargetApi 23
        renderscriptSupportModeEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        ndk {
//            abiFilters "armeabi-v7a", "x86", "arm64-v8a", "armeabi"
//            abiFilters "armeabi-v7a", "x86"
            abiFilters "armeabi-v7a"
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }
    buildTypes {
        release {
            debuggable false
            if (isIndependent()) {
                shrinkResources true
                minifyEnabled true
            }
            //上传埋点URL
            buildConfigField "String", "UPLOAD_URL", "\"https://data.biaoqing.com\""
            //金币系统URL
            buildConfigField "String", "COIN_HOST", "\"https://finance.biaoqing.com\""
            //主APPHost
            buildConfigField "String", "MAIN_HOST", "\"https://api.biaoqing.com\""
            //app下载地址
            buildConfigField "String", "APP_DOWNLOAD_URL", "\"https://a.app.qq.com/o/simple.jsp?pkgname=com.biaoqing.BiaoQingShuoShuo\""
            buildConfigField "String", "SHARE_URL", "\"https://m.biaoqing.com/thread\""
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            crunchPngs false //关闭crunchPng优化, 以加快构建
//            buildConfigField "String", "UPLOAD_URL", "\"http://data.test.biaoqing.com\""
//            buildConfigField "String", "COIN_HOST", "\"http://finance.test.biaoqing.com\""
//            buildConfigField "String", "MAIN_HOST", "\"http://api.test.biaoqing.com\""
            buildConfigField "String", "UPLOAD_URL", "\"https://data.biaoqing.com\""
            buildConfigField "String", "COIN_HOST", "\"https://finance.biaoqing.com\""
            buildConfigField "String", "MAIN_HOST", "\"https://api.biaoqing.com\""
            buildConfigField "String", "APP_DOWNLOAD_URL", "\"https://a.app.qq.com/o/simple.jsp?pkgname=com.biaoqing.BiaoQingShuoShuo\""
            buildConfigField "String", "SHARE_URL", "\"https://m.biaoqing.com/thread\""
            shrinkResources false
            minifyEnabled false
            testCoverageEnabled false
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            jni.srcDirs = []
            jniLibs.srcDirs = ['libs']
            res.srcDirs = [
                    'src/main/res',
            ]
        }
    }
    if (this.name.startsWith("app")) {
        signingConfigs {
            debug {
                storeFile file('biaoqing.jks')
                storePassword "biaoqing663"
                keyAlias "bq"
                keyPassword "biaoqing663"
            }
            release {
                storeFile file('biaoqing.jks')
                storePassword "biaoqing663"
                keyAlias "bq"
                keyPassword "biaoqing663"
            }
        }
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    sourceSets {
        main {
            //未开启独立编译 并且是独立的module，才会使用总是使用 library/AndroidManifest.xml
            if (isModule && this.name.startsWith("module")) {
                manifest.srcFile 'src/main/ismodule/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java {
                    //全部Module一起编译的时候剔除debug目录
                    exclude '**/debug/**'
                }
            }
        }
    }
    packagingOptions {
//        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/rxjava.properties'
//        exclude 'META-INF/NOTICE'
//        exclude 'META-INF/LICENSE'
//        exclude 'META-INF/LICENSE.txt'
//        exclude 'META-INF/NOTICE.txt'
    }
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion "$supportLibraryVersion"
            }
        }
    }
    resolutionStrategy.force "com.google.code.findbugs:jsr305:3.0.2"
}

/**
 * 不再建议群体剥离单独编译，应单独模块可单独编译，控制权交还给单独模块
 * @return
 */
def isIndependent() {
    //是app module ，独立编译
    if (this.name.startsWith("app")) {
        println("this module's name is not startsWith [module] , this.name = ${this.name}")
        return true
    }
    //是library module
    if (this.name.startsWith("library")) {
        println("this module's name is library , this.name = ${this.name}")
        return false
    }
    //module_common
    if (this.name.equals("module_common")) {
        println("this module's name is library , this.name = ${this.name}")
        return isModule_Common
    }

    //没有开启独立编译选项，所以为library
    if (!isModule) {
        println("not independent!")
        return false
    }

    //开启了独立编译选项，但是模块名称不是module_ 开头，所以为 library
    if (!this.name.startsWith("module")) {
        println("this module's name is not startsWith [module] , this.name = ${this.name}")
        return false
    }
    println("this module is independent!")
    return true
}
